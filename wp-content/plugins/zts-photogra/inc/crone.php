<?phpadd_filter( 'cron_schedules',  'customer_expiry_crone' );add_action( 'customer_expiry_crone',  'zts_check_customer_expiry'  );// Schedule an action if it's not already scheduledif ( ! wp_next_scheduled( 'customer_expiry_crone' ) ) {    wp_schedule_event( time(), 'every_day', 'customer_expiry_crone' );}    function customer_expiry_crone( $schedules ) {    $schedules['every_day'] = array(            'interval'  => 86400 * 1,            'display'   => 'ZTS CUSTOMER EXPIRY'    );    return $schedules;}function zts_check_customer_expiry() {        global $wpdb;        $table_name = $wpdb->prefix . 'zts_user_data';        $sql = "SELECT * FROM $table_name WHERE priority = 1 OR priority = 2 ORDER BY priority";        $results = $wpdb->get_results($sql, ARRAY_A);        foreach ($results as $key => $value) {            $product = wc_get_product($value['customer_plan']);            $plan_type = strtolower($product->get_description());                       if ($plan_type == '1 year') {                $days = 365;            } elseif ($plan_type == '2 years') {                $days = 730;            }            // Compare the added date with the current date            $added_date = strtotime($value['created_at']);            $current_date = strtotime(date('Y-m-d H:i:s'));            $diff_in_days = round(($current_date - $added_date) / (60 * 60 * 24));            if ($diff_in_days >= $days) {                // Update the expiry and status columns                $update_data = array(                    'expiry' => 1,                    'status' => 'pending'                );                $where = array('id' => $value['id']);                $wpdb->update($table_name, $update_data, $where);            }        }}